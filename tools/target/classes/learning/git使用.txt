git使用笔记：
1、安装git：http://rogerdudler.github.io/git-guide/index.zh.html
2、cmd-->git命令出现信息则安装成功，目录下有windows命令窗口和git命令窗口
3、添加公钥：见pubkey-generate.gif
4、远程仓库的使用：
	（1） git clone https://code.csdn.net/congge_1993/springboot-demo.git 克隆项目
	（2）查看远程仓库git remote (-v) ; cd project_name 打开项目目录
	（3）添加新的远程仓库 git remote add [name] [url]
	 (4) 从远程仓库加载数据 git fetch [remote_name] （在项目下不需要输入remote_name,实际中git fetch抓取但未合并到分支，可以使用git pull抓取并合并到当前分支)
	 (5) 推送数据到远程仓库：git push origin master
	 (6) 查看远程仓库信息：git remote show (origin默认名称)
	 (7) git remote rename [oldname] [newname] 重命名远程仓库在本地的简称；git remote rm [remote_name]
5、创建新分支与查看分支：git branch [branch_name]
6、切换分支：git checkout newbranch
	git checkout -b newbranch : 新建分支并切换，相当于5/6两步
7、提交改动：git add .  ; git commit -m "提交信息必需有" ; 
	git status 可以查看提交情况
	提交成功切换回主干git checkout master
8、切换到主干后合并分支: git merge newbranch
9、查看冲突:git diff
10、push代码删除分支：git push （-u origin master） ; git branch -D newbranch

上传本地项目到github：
1、进入项目目录初始化：git init
   推荐（可选）: git branch branch_name-->git checkout branch_name
   git checkout -b branch_name
2、添加文件和提交信息: git add . ; git commit -m ""
    git merge branch_name
3、添加远程仓库: git remote add origin [url]
4、git pull --rebase origin master 将远程仓库的原始文件加载到本地，本地没有readme文件时push会报错
5、git push -u origin master  提交代码到远程仓库


	<!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property> 

TransactionDefinition:
TRANSACTION_READ_UNCOMMITTED : 一个事务读取到另一个事务正在修改但未提交的数据（脏读），如果另一个事务修改操作回滚，那么读取的数据就是不合法的
	脏读，不可重复读，幻读均可能出现
TRANSACTION_READ_COMMITTED ：阻止一个事务读取未提交变更的行数据
	不会出现脏读，但是可能出现不可重复读，幻读
TRANSACTION_REPEATABLE_READ : 阻止一个事务读取未提交变更的行和阻止不可重复读产生（第一个事务读取1行，第二个事务修改这一行，然后第一个事务两次读取该行获得
	了两个不一样的结果）
	不会出现脏读、不可重复读，可能会出现幻读
TRANSACTION_SERIALIZABLE ：保证同样的查询条件查询的结果是一致的
	不会出现脏读、不可重复读，幻读

脏读：一个事务读取到另一个事务已经修改但未提交的数据，当另一个事务回滚时出现脏读。
不可重复读：一个事务读取几行数据时，其它并发事务对这些数据进行了修改，导致事务再次读取时获取的数据不一致
幻读：一个事务读取数据时，并发数据新增行数据或删除其中行数据，导致事务再次读取时数据行不一致